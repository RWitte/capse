function [automaton partMat] = infectCells(automaton, virusFlags, partMat, infection)

import caps.cells.ca.determineIfCellsBecomeInfected; % cell-free
import caps.cells.ca.spreadCell2Cell; % cell-to-cell
import caps.cells.ca.updatePreliticVirusProgenyAmount;


% Cell-free spread
if virusFlags.isCellFreeSpreadEnabled
    [automaton.grid newlyInfectedCells] = determineIfCellsBecomeInfected(...
        automaton.grid, ...
        automaton.dimension.virusAmount, ...
        automaton.dimension.state, ...
        automaton.dimension.infectionList, ...
        automaton.dimension.infectionClock, ...
        automaton.infectionProbabilities, ...
        automaton.neighbourInfectionProbabilities, ...
        automaton.cellArea, automaton.cellStates, ... 
        automaton.latentPeriod, length(automaton.infectedCells));

    automaton.infectedCells = addToInfList( ...
        automaton.infectedCells, ...
        newlyInfectedCells, ...
        automaton.intensityRatesNormalised, ...
        automaton.grid, ... 
        automaton.dimension.virusAmount, ...
        virusFlags.isExtrapolationEnabled);
    
    
end

% Cell-to-cell spread
if virusFlags.isCell2CellSpreadEnabled
    automaton = spreadCell2Cell(automaton, infection, virusFlags);
end


% Update virus amount.
if virusFlags.isPrelyticVirusProductionEnabled
    [automaton partMat] = caps.cells.ca.updatePreliticVirusProgenyAmount(automaton, virusFlags, partMat, infection);
end

end
